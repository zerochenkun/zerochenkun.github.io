(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{331:function(t,e,a){"use strict";a.r(e);var n=a(33),r=Object(n.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"《js-对象基本用法》"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#《js-对象基本用法》"}},[t._v("#")]),t._v(" 《JS 对象基本用法》")]),t._v(" "),a("p",[t._v("内容1：声明对象的两种语法\n内容2：如何删除对象的属性\n内容3：如何查看对象的属性\n内容4：如何修改或增加对象的属性\n内容5：'name' in obj和obj.hasOwnProperty('name') 的区别")]),t._v(" "),a("h2",{attrs:{id:"声明对象的两种语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#声明对象的两种语法"}},[t._v("#")]),t._v(" 声明对象的两种语法")]),t._v(" "),a("p",[t._v("对象（object）是 JavaScript 语言的核心概念，也是最重要的数据类型。")]),t._v(" "),a("p",[t._v("什么是对象？简单说，对象就是一组“键值对”（key-value）的集合，是一种无序的复合数据集合。")]),t._v(" "),a("h3",{attrs:{id:"声明方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#声明方法"}},[t._v("#")]),t._v(" 声明方法")]),t._v(" "),a("p",[t._v("对象有两种声明方法，可以直接声明，也可用创建对象来声明，第一种更常用，第二种是官方定义，更正规。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("// 1.直接声明 \nlet obj = {\n    dogName = lele,\n    color = balck\n}\n// 2.创建对象声明\n let obj = new Object {\n    dogName = huahua,\n    color = white\n}\n")])])]),a("h2",{attrs:{id:"删除对象的属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除对象的属性"}},[t._v("#")]),t._v(" 删除对象的属性")]),t._v(" "),a("p",[t._v('直接 delete obj.xxx 或 delete obj["xxx"],这两个操作效果是一样的,属性会被删除；\n另外还有人会 直接 obj.name = undefined,这只会删除属性名。\n可以用 obj.name in obj 来查看属性是否存在')]),t._v(" "),a("h2",{attrs:{id:"查看对象属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看对象属性"}},[t._v("#")]),t._v(" 查看对象属性")]),t._v(" "),a("p",[t._v("查看自身属性\nObject.keys(obj)\n查看自身属性 + 共有属性\nconsole.dir(obj)\n判断一个属性是自身的还是共有的\nobj.hasOwnProperty('toString')")]),t._v(" "),a("blockquote",[a("p",[t._v("注： 每个对象都有原型，对象的原型也是对象")])]),t._v(" "),a("h2",{attrs:{id:"修改增加对象属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修改增加对象属性"}},[t._v("#")]),t._v(" 修改增加对象属性")]),t._v(" "),a("p",[t._v("直接赋值\nlet obj.name = {key:value}\nobj.name = {key:value}\nobj.['name'] = {key:value}")]),t._v(" "),a("blockquote",[a("p",[t._v("无法通过自身增加或修改共有属性\n偏要修改共有属性？\n那就用 Object.prototype.toString = 'xxx'\n一般来说，不要修改原型，会产生各种问题")])])])}),[],!1,null,null,null);e.default=r.exports}}]);