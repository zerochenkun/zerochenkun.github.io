(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{333:function(a,t,e){"use strict";e.r(t);var s=e(33),n=Object(s.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"浅析-vue-数据响应式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#浅析-vue-数据响应式"}},[a._v("#")]),a._v(" 浅析 VUE 数据响应式")]),a._v(" "),e("h2",{attrs:{id:"什么是响应式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#什么是响应式"}},[a._v("#")]),a._v(" 什么是响应式")]),a._v(" "),e("p",[a._v("Vue 最独特的特性之一，是其非侵入性的响应式系统。数据模型仅仅是普通的 JavaScript 对象。而当你修改它们时，视图会进行更新。这使得状态管理非常简单直接"),e("b",[a._v("，不过理解其工作原理同样重要。")])]),a._v(" "),e("h3",{attrs:{id:"vue的数据存储在data里，当数据更新时，会触发视图的渲染。"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue的数据存储在data里，当数据更新时，会触发视图的渲染。"}},[a._v("#")]),a._v(" * Vue的数据存储在data里，当数据更新时，会触发视图的渲染。")]),a._v(" "),e("p",[a._v("首先先来看一下Vue到底对data做了什么。")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('//引用完整版 Vue\nimport Vue from "vue/dist/vue.js"; \n\nVue.config.productionTip = false;  //禁用警告\n\nconst myData = {\n  n: 0\n}\nconsole.log(myData)  // 精髓\n\nlet vm = new Vue({\n  data: myData,\n  template: `\n    <div>{{n}}</div>\n  `\n}).$mount("#app");\n\nsetTimeout(()=>{\n  myData.n += 10\nconsole.log(myData)  // 精髓\n},3000)\n')])])]),e("p",[a._v("打印结果")]),a._v(" "),e("p",[e("img",{attrs:{src:"images/console.log%7Bdatan%7D.png",alt:""}})]),a._v(" "),e("p",[a._v("在这里,第一个 n 是 0,但是第二个在 3s后返回的却不是 n是10 ,两次的结果不一样,那就说明 vue对 data 里的数据进行了处理")]),a._v(" "),e("h3",{attrs:{id:"vue对mydata做了什么"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue对mydata做了什么"}},[a._v("#")]),a._v(" Vue对myData做了什么?")]),a._v(" "),e("p",[a._v("1 给对象添加value属性，添加getter 和 setter 对属性进行监控")]),a._v(" "),e("p",[a._v("2 使用vm作为myData的代理")]),a._v(" "),e("p",[a._v("３ 会对myData的所有属性进行监控，当vm知道myData属性变了，就可以调用render(data)进行渲染了。")]),a._v(" "),e("h2",{attrs:{id:"小结-数据响应式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#小结-数据响应式"}},[a._v("#")]),a._v(" 小结 数据响应式")]),a._v(" "),e("p",[a._v("const vm = new Vue({ data: { n: 0 } })")]),a._v(" "),e("p",[a._v("如果我修改vm.n，那么UI中的n就会响应我")]),a._v(" "),e("p",[a._v("(Vue 2通过Object.defineProperty来实现数据响应式)")]),a._v(" "),e("h2",{attrs:{id:"vue-有-bug"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue-有-bug"}},[a._v("#")]),a._v(" vue 有 bug")]),a._v(" "),e("h3",{attrs:{id:"object-defineproprety-的问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#object-defineproprety-的问题"}},[a._v("#")]),a._v(" Object.defineProprety 的问题")]),a._v(" "),e("p",[a._v("Object.defineProprety(obj, 'n' ,{..})必须要有一个 'n',才能监听和代理 obj.n,"),e("b",[a._v("那如果我们没有给出 n呢？")])]),a._v(" "),e("h5",{attrs:{id:"示例一："}},[e("a",{staticClass:"header-anchor",attrs:{href:"#示例一："}},[a._v("#")]),a._v(" 示例一：")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('import Vue from "vue/dist/vue.js";\n\nVue.config.productionTip = false;\n\nnew Vue({\n  data: {},\n  template: `\n    <div>{{n}}</div>\n  `\n}).$mount("#app");\n')])])]),e("p",[a._v("结果 vue 报出警告\n"),e("img",{attrs:{src:"images/vue-waring.png",alt:"vue 报出警告"}})]),a._v(" "),e("h5",{attrs:{id:"示例二："}},[e("a",{staticClass:"header-anchor",attrs:{href:"#示例二："}},[a._v("#")]),a._v(" 示例二：")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('import Vue from "vue/dist/vue.js";\n\nVue.config.productionTip = false;\n\nnew Vue({\n  data: {\n    obj: {\n      a: 0 // obj.a 会被 Vue 监听 & 代理\n    }\n  },\n  template: `\n    <div>\n      {{obj.b}}\n      <button @click="setB">set b</button>\n    </div>\n  `,\n  methods: {\n    setB() {\n      this.obj.b = 1; \n    }\n  }\n}).$mount("#app");\n')])])]),e("h5",{attrs:{id:"点击setb后，页面会显示1吗？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#点击setb后，页面会显示1吗？"}},[a._v("#")]),a._v(" 点击setB后，页面会显示1吗？")]),a._v(" "),e("p",[a._v("答案是：不会，因为Vue无法监听一开始就不存在的obj.b")]),a._v(" "),e("h4",{attrs:{id:"解决方法一"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#解决方法一"}},[a._v("#")]),a._v(" 解决方法一")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[a._v("一开始就声明好所有的 key\n")])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("new Vue(){\n    data:{\n        obj:{\n            a:'0';\n            b:'';\n        }\n    }\n}\n")])])]),e("h4",{attrs:{id:"解决方法二"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#解决方法二"}},[a._v("#")]),a._v(" 解决方法二")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[a._v("使用Vue.set 或 this.$set\n")])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("methods:{\n    setB(){\n        Vue.set(this.obj,'b',1)//或 this.$set(this.obj,'b',1)\n    }\n}\n")])])]),e("h3",{attrs:{id:"重点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#重点"}},[a._v("#")]),a._v(" * 重点")]),a._v(" "),e("p",[a._v("由于Object.definePropery 的限制，Vue无法检测到对象属性的添加或删除。所以Vue不允许动态添加根级响应式属性，所以你必须在初始化实例前声明所有根级响应式属性，哪怕只是一个空值，或者使用Vue.set 或 vm.$set 进行设置。")]),a._v(" "),e("h3",{attrs:{id:"当data是数组时："}},[e("a",{staticClass:"header-anchor",attrs:{href:"#当data是数组时："}},[a._v("#")]),a._v(" 当data是数组时：")]),a._v(" "),e("p",[a._v("请看示例")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('import Vue from "vue/dist/vue.js";\n\nVue.config.productionTip = false;\n\nnew Vue({\n  data: {\n    array: ["a", "b", "c"]\n  },\n  template: `\n    <div>\n      {{array}}\n      <button @click="setD">set d</button>\n    </div>\n  `,\n  methods: {\n    setD() {\n      this.array[3] = "d"; //请问，页面中会显示 \'d\' 吗？\n      // 等下，你为什么不用 this.array.push(\'d\')\n    }\n  }\n}).$mount("#app");\n')])])]),e("p",[a._v("如果data时数组，意味着你无法提前声明所有key，也不可以一直使用Vue.set 或 vm.$set 进行设置。")]),a._v(" "),e("p",[a._v("尤雨溪的做法是，篡改数组的API，我们可以使用Vue提供的变异方法操作，如下")]),a._v(" "),e("p",[a._v("this.array.push('value')\n这里使用的push并不是Array.push，而是经过vue篡改后的api，vue的data中的数组会增加一层原型，实现了对数组数据的监听和代理，从而触发视图的更新。在Vue中这种api称为变异方法。这7个变异方法包括：")]),a._v(" "),e("p",[a._v("*push()")]),a._v(" "),e("p",[a._v("*pop()")]),a._v(" "),e("p",[a._v("*shift()")]),a._v(" "),e("p",[a._v("*unshift()")]),a._v(" "),e("p",[a._v("*splice()")]),a._v(" "),e("p",[a._v("*sort()")]),a._v(" "),e("p",[a._v("*reverse()")]),a._v(" "),e("blockquote",[e("p",[a._v("编辑于 2-16-2020")])])])}),[],!1,null,null,null);t.default=n.exports}}]);